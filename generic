#!/bin/bash
# This file is part of Sintel.
#
# Sintel is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Sintel is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Sintel.  If not, see <https://www.gnu.org/licenses/>.
#
#
#Funciones genericas

function generic.info() {
    echo "generic - Funciones genéricas."
    echo
    echo "Contiene funciones genéricas de soporte para otros módulos."
    echo
}

function trim() {
    echo $*
}

function trim.info() {
    echo "generic->trim - Elimina espacios sobrantes por la izquierda y por la derecha"
    echo "                a una cadena."
    echo
    echo -e "\t Argumentos: cadena"
}

function userChoice() {

	local limite=$1
	local cadena="$2"
	local reply
	local reply=0

	echo > /dev/tty
	echo "$cadena" > /dev/tty
	read reply < /dev/tty
	echo > /dev/tty

	#We see if the user entered a number such as we need
	while [[ "$reply" -lt 0 ]] || [[ "$reply" -gt  $limite ]]; do

		#We give advice to the user and exit
		echo "Tiene que introducir un número de entre los indicados:" > /dev/tty
		read reply < /dev/tty
		#echo "Reply es: $reply" > /dev/tty

	done

	echo $reply
}

function userChoice.info() {
    echo "generic->userChoice - Da a elegir al usuario un número entre rango de 0 a n"
    echo
    echo -e "\tArgumentos:limite, cadena"
    echo
    echo "El límite establece el límite superior del rango, es decir n."
    echo "La cadena es el mensaje que se mostrará al usuario antes de introducir"
    echo "un número por teclado."
}

function checkArgs() {
    local nargs="$1"
    shift
    
    if (( $nargs !=  $# )); then
	echo "Error: La función requiere $nargs argumentos" > /dev/tty
	echo "Se proporcionaron $#" > /dev/tty
	return 1
    else
	return 0
    fi
}

function pause() {
    read -n1 -r -p "Pulse una tecla para continuar..." key
}
