#!/bin/bash
# This file is part of Sintel.
#
# Sintel is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Sintel is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Sintel.  If not, see <https://www.gnu.org/licenses/>.
#
#
#Mover el puntero de serie
#El puntero permite saber por qué episodio nos llegamos.
#Moverlo es crucial para decirle al sistema cuál es el siguiente episodio que tenemos pendiente

function head.info() {
    echo "head - Puntero de series"
    echo
    echo "Funciones que ayudan a gestionar por qué eisodio"
    echo "nos llegamos de una serie."
}

function head.reset() {
    [[ $# != 1 ]] && ( die $(iargs 1 "id") )
	local idmedio="$1"

	db.executeUpdate "update episodio set esvisto = 0 where idmedio = $idmedio"
}

function head.reset.info() {
    echo "head.reset - Mueve el puntero de una serie al principio."
    echo
    echo -e "\tArgumentos: idmedio"
    echo
    echo "Tanto las películas como las series se almacenan en la tabla medio."
    echo "A cada nuevo medio se le asigna un identificador numérico. Ese es el"
    echo "idmedio."
    echo
    echo "Ejemplos:"
    echo -e "\tsintel -f head.reset:871"
    echo -e "\tsintel -f head.reset:221"
}

function head.markall() {
    [[ $# != 1 ]] && ( die $(iargs 1 "id") )
	local idmedio="$1"

	db.executeUpdate "update episodio set esvisto = 1 where idmedio = $idmedio"
}

function head.markall.info() {
    echo "head.markall - Marcar todos los episodios de una serie como vistos."
    echo
    echo -e "\tArgumentos: idmedio"
    echo
    echo "Ejemplos:"
    echo -e "\tsintel -f head.markall:871"
}

function head.resetTemporada() {
    [[ $# != 2 ]] && ( die $(iargs 2 "id y temporada") )
    
	local idmedio="$1"
	local temporada="$2"

	db.executeUpdate "update episodio set esvisto = 0 where idmedio = $idmedio and temporada = $temporada"
}

function head.resetTemporada.info() {
    echo "head.resetTemporada - Marcar temporada de una serie como no vista."
    echo
    echo -e "\tArgumentos: idmedio, temporada"
    echo
    echo "Ejemplos:"
    echo -e "\tsintel -n head.resetTemporada:\"871|10\""
}

function head.markTemporada() {
    [[ $# != 2 ]] && ( die $(iargs 2 "id y temporada") )
    
	local idmedio="$1"
	local temporada="$2"

	db.executeUpdate "update episodio set esvisto = 1 where idmedio = $idmedio and temporada = $temporada"
}

function head.markTemporada.info() {
    echo "head.markTemporada - Marcar temporada de una serie como vista."
    echo
    echo -e "\tArgumentos: idmedio, temporada"
    echo
    echo "Ejemplos:"
    echo -e "\tsintel -n head.markTemporada:\"871:10\""
}

function head.forth() {
    [[ $# != 1 ]] && ( die $(iargs 1 "id") )
	local idmedio="$1"

	#echo "Idmedio: $idmedio" > /dev/tty
	local t=$(db.executeQuery "select min(temporada) from episodio where idmedio=$idmedio and esvisto=0")
	#echo "Temporada: $t" > /dev/tty
	local id=$(db.executeQuery "select min(id) from episodio where idmedio = $idmedio and temporada = $t and esvisto = 0")
	db.executeUpdate "update episodio set esvisto = 1 where id = $id"
}

function head.forth.info() {
    echo "head.forth - Avanzar el puntero de la serie al siguiente episodio."
    echo
    echo -e "\tArgumentos: idmedio"
    echo
    echo "Ejemplos:"
    echo -e "\tsintel -f head.forth:871"
}

function head.back() {
    [[ $# != 1 ]] && ( die $(iargs 1 "id") )
	local idmedio="$1"

	local t=$(db.executeQuery "select max(temporada) from episodio where idmedio=$idmedio and esvisto>0")
	local id=$(db.executeQuery "select max(id) from episodio where idmedio = $idmedio and temporada = $t and esvisto > 0")
	db.executeUpdate "update episodio set esvisto = 0 where id = $id"
}

function head.back.info() {
    echo "head.back - Retroceder el puntero de la serie al episodio anterior."
    echo
    echo -e "\tArgumentos: idmedio"
    echo
    echo "Ejemplos:"
    echo -e "\tsintel -f head.back:871"
}

function head.resetN() {
    [[ $# != 2 ]] && ( die $(iargs 2 "id y número") )
    
	local idmedio="$1"
	local n="$2"
	
	while [[ $n > 0 ]]; do
		head.back $idmedio
		(( n-- ))
	done
}

function head.resetN.info() {
    echo "head.resetN - Mover el puntero de la serie N veces hacia atrás."
    echo
    echo -e "\tArgumentos: idmedio, N (número de veces)"
    echo
    echo "Ejemplos:"
    echo -e "\tsintel -n head.resetN:\"871|5\""
}

function head.markN() {
    [[ $# != 2 ]] && ( die $(iargs 2 "id y número") )
    
	local idmedio="$1"
	local n="$2"

	while [[ $n > 0 ]]; do
		head.forth $idmedio
		(( n-- ))
	done
}

function head.markN.info() {
    echo "head.markN - Mover el puntero de la serie N veces hacia delante."
    echo
    echo -e "\tArgumentos: idmedio, N (número de veces)"
    echo ""
    echo
    echo "Ejemplos:"
    echo -e "\tsintel -n head.markN:\"871:5\""
}

function head.next() {
    [[ $# != 1 ]] && ( die $(iargs 1 "id") )
	local idmedio="$1"

	local t=$(db.executeQuery "select min(temporada) from episodio where idmedio=$idmedio and esvisto=0")

	if [[ "$t" == "" ]]; then
		echo "-1"
		exit
	fi
	
	local episodio=$(db.executeQuery "select min(episodio) from episodio where idmedio = $idmedio and temporada = $t and esvisto = 0")
	#echo "head.next Next: $id" > /dev/tty

	if [[ "$episodio" == "" ]]; then
		echo "-1"
	else
		local id=$(db.executeQuery "select id from episodio where idmedio=$idmedio and temporada=$t and episodio=$episodio")
		if [[ "$id" == "" ]]; then
		    echo "-1"
		else
		  echo "$id"
		fi
	fi
}

function head.next.info() {
    echo "head.next - Avanzar el puntero de la serie un episodio."
    echo
    echo -e "\tArgumentos: idmedio"
    echo
    echo "Ejemplos:"
    echo -e "\tsintel -f head.next:871"
}
